#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct
{

    int matricula;
    char nombre[30];
    char genero;
} alumno;

void cargarAlumnos(alumno arreglo[], int* dimension);
void mostrarArray(alumno arreglo[], int dimension);
void ordenarSeleccion(alumno arreglo[], int dimension);
int buscarMenor(alumno arreglo[], int dimension,int i);
void mostrarGenero(alumno arreglo[], int dimension, char genero);
void nuevoAlumnoOrdenado(alumno arreglo[], int* dimension) ;
char confirmarGenero (char gen);
void ordenarInsercion(alumno arreglo[], int dimension);
int contarGenero(alumno arreglo[], int dimension, char genero);
void ordenacionInsercion (alumno arreglo[], int dimension);
void insertar(alumno arreglo[], int u);
void puntos();

int main()
{


    alumno* arreglo;
    int dimension = 0;

    arreglo = (alumno*)malloc(1 * sizeof(alumno));

    char sexo;
    char gen;
    int cantidad;

    char seguir[] = "si";

    int operador;
    printf(" \nPrimero carge el array, luego seleccione el punto a realizar \n");
    cargarAlumnos(arreglo, &dimension);



    while (strcmp(seguir, "si") == 0 || strcmp(seguir, "Si")== 0 || strcmp(seguir, "SI")== 0)
    {


        printf("Que punto queres hacer: \n");
        puntos();

        scanf("%i", &operador);



        switch(operador)
        {

        case 1:
            mostrarArray(arreglo, dimension);
            break;

        case 2:
            mostrarArray(arreglo, dimension);
            break;

        case 3:
            mostrarArray(arreglo, dimension);
            break;

        case 4:
            mostrarArray(arreglo, dimension);
            printf("\n\n\nOrdenado por N de legajos\n");

            ordenarSeleccion(arreglo, dimension);
            mostrarArray(arreglo, dimension);
            break;

        case 5:
            printf("Que sexo desea buscar  ");
            fflush(stdin);
            scanf("%c", &sexo);

            mostrarGenero(arreglo, dimension, sexo);
            break;

        case 6:
            ordenarSeleccion(arreglo, dimension);
            printf("\n\n");
            nuevoAlumnoOrdenado(arreglo, &dimension);
            break;

        case 7:
            ordenarInsercion(arreglo, dimension);
            mostrarArray(arreglo, dimension);
            break;

        case 8:
            printf("De que genero quiere saber la cantidad");
            fflush(stdin);
            scanf("%c", &gen);
            cantidad =  contarGenero(arreglo, dimension, gen);

            printf("De el genero %c, hay un total de %i alumnos  \n", gen, cantidad);
            break;

        }


        printf("Desea hacer otro punto?  \n SEGUIR 'si' \n TERMINAR 'no'  \n RESPUESTA: " );
        scanf("%s", &seguir);
    }

    return 0;
}


void cargarAlumnos(alumno arreglo[], int* dimension)
{

    int valor = 1;
    char nombre[30];
    int i = *dimension;

    while(valor == 1)
    {


        printf("Nombre del alumno: ");
        fflush(stdin);
        scanf("%s", &nombre);
        strcpy(arreglo[i].nombre, nombre);

        printf("\nN de matricula: ");
        scanf("%i", &arreglo[i].matricula);

        printf("M = Masculino \nF = Femenino \n");
        printf("\n Genero: ");


        char gen;
        fflush(stdin);
        scanf("%c", &gen);


        gen = confirmarGenero(gen);
        arreglo[i].genero = gen;


        printf("\n\n1: SEGUIR CARGANDO\n");
        scanf("%i", &valor);

        i++;
        arreglo=realloc(arreglo, (i+1) * sizeof(alumno));

    }
    *dimension=i;
}


void mostrarArray(alumno arreglo[], int  dimension)
{

    int i;

    for (i = 0; i< dimension; i++)
    {


        printf("\nNOMBRE         : %s\n", arreglo[i].nombre);
        printf("N de MATRICULA : %i\n", arreglo[i].matricula);
        printf("GENERO         : %c\n", arreglo[i].genero);
        printf("\n");

    }
}

int buscarMenor(alumno arreglo[], int dimension,int i)
{

    int u = i + 1;
    int menor = arreglo[i].matricula;
    int posmenor = i;



    while(u < dimension)
    {

        if(menor > arreglo[u].matricula)
        {

            menor = arreglo[u].matricula;
            posmenor = u;
        }
        u++;
    }

    return posmenor;
}


void ordenarSeleccion(alumno arreglo[], int dimension)
{

    int aux;
    int posmenor;
    int i = 0;


    while (i < dimension - 1)
    {

        posmenor = buscarMenor(arreglo, dimension, i);
        aux = arreglo[posmenor].matricula;
        arreglo[posmenor].matricula = arreglo[i].matricula;
        arreglo[i].matricula = aux;
        i++;
    }
}


void mostrarGenero(alumno arreglo[], int dimension, char genero)
{

    int i = 0;

    for ( i = 0; i < dimension; i++)
    {

        if (arreglo[i].genero == genero)
        {

            printf("\nNOMBRE         : %s\n", arreglo[i].nombre);
            printf("N de MATRICULA : %i\n", arreglo[i].matricula);
            printf("GENERO         : %c\n", arreglo[i].genero);
            printf("\n");

        }
    }

}


void nuevoAlumnoOrdenado(alumno arreglo[], int* dimension)
{

    int i = *dimension++;



    printf("Insertar nombre del nuevo alumno: ");
    fflush(stdin);
    scanf("%s", &arreglo[i].nombre);

    printf("Inserte N de matricula del nuevo alumno: ");
    scanf("%i", &arreglo[i].matricula);

    printf("Inserte genero del nuevo alumno\nM = masculino\nF = femenino\n");


    char gen;

    scanf("%c", &gen);

    gen = confirmarGenero(gen);

    arreglo[i].genero = gen;
    i++;
    ordenarSeleccion(arreglo, i);
    mostrarArray(arreglo, i);
}


char confirmarGenero (char gen)
{

    while (gen != 'M' && gen != 'F')
    {
        fflush(stdin);
        printf("Ingrese un genero valido: ");
        scanf("%c", &gen);
    }

    return gen;
}



int contarGenero(alumno arreglo[], int dimension, char genero)
{

    int i;
    int gen = 0;

    for (i = 0; i< dimension; i++)
    {

        if (arreglo[i].genero == genero)
        {

            gen++;

        }
    }
    return gen;
}


void insertar(alumno arreglo[], int i)
{
    int u = i;

    alumno dato[100];
    dato[0]= arreglo[i+1];

    while(u >= 0 && strcmp(dato[0].nombre, arreglo[u].nombre) < 0)
    {

        arreglo[u+1] = arreglo[u];
        u--;
    }
    arreglo[u+1] = dato[0];
}


void ordenarInsercion(alumno arreglo[], int dimension)
{

    int i =0;

    while(i < (dimension - 1))
    {
        insertar(arreglo, i);
        i++;
    }
}


void puntos()
{
    int i;
    for(i = 2; i< 9; i++)
    {

        printf("  -Punto %i: presiones la tecla %i\n", i, i);
    }

}
