#include <stdio.h>
#include <stdlib.h>
#include "pila.h"
#define maxFilas 5
#define maxColumnas 3


#define maxLetras 30
#define maxPalabras 21

void cargarMatriz(int matriz[maxFilas][maxColumnas]);
void mostrarMatriz (int matriz[maxFilas][maxColumnas]);
void cargarAleatorio(int matriz[maxFilas][maxColumnas]);
int sumarMatriz ( int matriz[maxFilas][maxColumnas]);
void promedioMatriz (int matriz[maxFilas][maxColumnas]);
void buscarDato(int matriz[maxFilas][maxColumnas], int dato);
int cargarStrings(char palabras[maxPalabras][maxLetras]);
void mostrarArreglo(char palabras[maxPalabras][maxLetras], int palabrasIngresadas);
void buscarPalabra (char palabras[maxPalabras][maxLetras], int palabrasIngresadas, char palabraBuscada[maxLetras]);

int main()
{
    int matriz[maxFilas][maxColumnas];

    //cargarMatriz(matriz);


    cargarAleatorio(matriz);
    mostrarMatriz(matriz);
    //sumarMatriz(matriz);
    promedioMatriz(matriz);

    int dato;
    // printf(" Que dato desea buscar ");
    //scanf("%i", &dato);

    //buscarDato(matriz, dato);

    char palabras[maxPalabras][maxLetras];

    int palabrasIngresadas = cargarStrings(palabras);

    mostrarArreglo(palabras, palabrasIngresadas);




    //---------------------------------------------------

    char palabraBuscada[maxLetras];

    printf("Que palabra desea buscar: ");
    fflush(stdin);
    gets(palabraBuscada);


    buscarPalabra(palabras, palabrasIngresadas, palabraBuscada);

    return 0;
}

void cargarMatriz(int matriz[maxFilas][maxColumnas])
{

    int i, j;

    for (i = 0; i < maxFilas; i++ )
    {

        for(j = 0; j < maxColumnas; j++)
        {

            printf("Inserte valor a la matriz: ");
            scanf("%i", &matriz[i][j]);

        }
    }
}


void mostrarMatriz (int matriz[maxFilas][maxColumnas])
{

    int i;
    int j;

    for (i = 0; i < maxFilas; i++ )
    {

        for(j = 0; j < maxColumnas; j++)
        {

            printf("%i  ", matriz[i][j]);

        }
        printf("\n");
    }
}

void cargarAleatorio(int matriz[maxFilas][maxColumnas])
{

    int i, j, dato;

    for (i = 0; i < maxFilas; i++ )
    {

        for(j = 0; j < maxColumnas; j++)
        {

            dato = rand() % 100 + 1;


            matriz[i][j] = dato;

        }
    }
}


int sumarMatriz ( int matriz[maxFilas][maxColumnas])
{

    int i, j, resultado = 0;

    for (i = 0; i < maxFilas; i++ )
    {

        for(j = 0; j < maxColumnas; j++)
        {

            resultado = resultado + matriz[i][j];

        }
    }


    printf("\n EL resultado de la suma de la mtriz es: %i", resultado);

    return resultado;
}


void promedioMatriz (int matriz[maxFilas][maxColumnas])
{

    int resultado = sumarMatriz(matriz);

    int elementos = maxColumnas * maxFilas;

    float promedio;
    promedio = (float)resultado / (float)elementos;


    printf("\n El promedio de tu matriz es: %.2f", promedio);

}


void buscarDato(int matriz[maxFilas][maxColumnas], int dato)
{


    int i, j;

    for (i = 0; i < maxFilas; i++ )
    {

        for(j = 0; j < maxColumnas; j++)
        {

            if (dato == matriz[i][j])
            {

                printf(" El dato %i, se encuentra en la matriz  ", dato);
            }
        }
    }
}


int cargarStrings(char palabras[maxPalabras][maxLetras])
{


    int valor = 1;
    int i = 0;

    while((valor == 1) && (i < maxPalabras))
    {

        fflush(stdin);
        printf("\nCargar el string\n ");
        scanf("%s", &palabras[i]);

        i++;
        printf("\n1:SEGUIR\n0:CORTAR\n");
        scanf("%i", &valor);
    }

    return i;
}

void mostrarArreglo(char palabras[maxPalabras][maxLetras], int palabrasIngresadas)
{

    int i;

    for (i = 0; i < palabrasIngresadas; i++)
    {

        printf("%s\n", palabras[i]);
    }
}



void buscarPalabra (char palabras[maxPalabras][maxLetras], int palabrasIngresadas, char palabraBuscada[maxLetras])
{


    int i = 0;


    while (i < palabrasIngresadas)
    {

        if (strcmp(palabras[i], palabraBuscada )== 0)
        {


            printf("La palabra %s esta en la posicion %i \n", palabraBuscada, i);
            return 0;
        }
        i++;
    }

    printf("\n -1 Wachin \n");

}


